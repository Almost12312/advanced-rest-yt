POST http://localhost:1234/users
Content-Type: application/json

{}

> {%
    client.test("List of users", () => {
        client.assert(response.status === 201, "User creating is failure!")
    })
%}

###

GET http://localhost:1234/users
Content-Type: application/json

{}

> {%
    client.test("List of users", () => {
        client.assert(response.status === 418, "User creating is failure!")
    })
%}

###

GET http://localhost:1234/users/1
Content-Type: application/json

{}

> {%
    client.test("List of users", () => {
        client.assert(response.status === 418, "User creating is failure!")
    })
%}

###

PUT http://localhost:1234/users/1
Content-Type: application/json

{}

> {%
    client.test("List of users", () => {
        client.assert(response.status === 204, "User updating is failure!")
    })
%}
###

PATCH http://localhost:1234/users/13
Content-Type: application/json

{}

> {%
    client.test("List of users", () => {
        client.assert(response.status === 204, "User parcticiall update is failure!")
    })
%}
###

DELETE http://localhost:1234/users/1
Content-Type: application/json

{}
> {%
    client.test("List of users", () => {
        client.assert(response.status === 204, "User delete is failure!")
    })
%}
###

#authors
GET http://localhost:1234/authors
Content-Type: application/json

{}
> {%
    client.test("List of authors", () => {
        client.assert(response.status === 200, "User delete is failure!")
    })
%}

###
#authors fiter.
# filer=operator:value
GET http://localhost:1234/authors?age=lte:40
Content-Type: application/json

###

#authors w/ sort
# sort_by=filed, sort_order=asc
GET http://localhost:1234/authors?sort_by=age&sort_order=desc
Content-Type: application/json

###

#authors w/ pagination. Page 1
GET http://localhost:1234/authors?limit=5
Content-Type: application/json

###

#authors w/ pagination. Page 2
GET http://localhost:1234/authors?limit=5&ptoken=token
Content-Type: application/json